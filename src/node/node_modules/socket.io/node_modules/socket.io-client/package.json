{
  "name": "socket.io-client",
  "version": "1.0.0",
  "keywords": [
    "realtime",
    "framework",
    "websocket",
    "tcp",
    "events",
    "client"
  ],
  "dependencies": {
    "engine.io-client": "0.4.3",
    "emitter-component": "0.0.6",
    "bind-component": "0.0.1",
    "object-component": "0.0.3",
    "socket.io-parser": "1.0.2",
    "to-array": "0.1.3",
    "debug": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "expect.js": "*",
    "uglify-js": "*"
  },
  "contributors": [
    {
      "name": "Guillermo Rauch",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "Arnout Kazemier",
      "email": "info@3rd-eden.com"
    },
    {
      "name": "Vladimir Dronnikov",
      "email": "dronnikov@gmail.com"
    },
    {
      "name": "Einar Otto Stangvik",
      "email": "einaros@gmail.com"
    }
  ],
  "component": {
    "scripts": {
      "engine.io/index.js": "lib/index.js",
      "engine.io/manager.js": "lib/manager.js",
      "engine.io/engine.js": "lib/engine.js",
      "engine.io/socket.js": "lib/socket.js",
      "engine.io/emitter.js": "lib/emitter.js"
    }
  },
  "readme": "\n### This Readme corresponds to the upcoming 1.0 release. Please refer to http://socket.io for the current 0.9.x documentation.\n\n# socket.io-client\n\n[![Build Status](https://secure.travis-ci.org/LearnBoost/socket.io-client.png)](http://travis-ci.org/LearnBoost/socket.io-client)\n\n## How to use\n\n### Standalone\n\n  A standalone build of `socket.io-client` is exposed automatically by the\n  socket.io server as `/socket.io/socket.io.js`. Alternatively you can\n  serve the file `socket.io-client.js` found at the root of this repository.\n\n  ```html\n  <script src=\"/socket.io/socket.io.js\"></script>\n  <script>\n    var socket = io('http://localhost');\n    socket.on('connect', function(){\n      socket.on('event', function(data){});\n      socket.on('disconnect', fucntion(){});\n    });\n  </script>\n  ```\n\n### Component\n\n  Socket.IO is a [component](http://github.com/component/component), which\n  means you can include it by using `require` on the browser:\n\n  ```js\n  var socket = require('socket.io')('http://localhost');\n  socket.on('connect', function(){\n    socket.on('event', function(data){});\n    socket.on('disconnect', fucntion(){});\n  });\n  ```\n\n### Node.JS\n\n  Add `socket.io-client` to your `package.json` and then:\n\n  ```js\n  var socket = require('socket.io-client')('http://localhost');\n  socket.on('connect', function(){\n    socket.on('event', function(data){});\n    socket.on('disconnect', fucntion(){});\n  });\n  ```\n\n## API\n\n### IO(url:String, opts:Object):Socket\n\n  Exposed as the `io` namespace in the standalone build, or the result\n  of calling `require('socket.io-client')`.\n\n  When called, it creates a new `Manager` for the given URL, and attempts\n  to reuse an existing `Manager` for subsequent calls, unless the\n  `multiplex` option is passed with `false`.\n\n  The rest of the options are passed to the `Manager` constructor (see below\n  for details).\n\n  A `Socket` instance is returned for the namespace specified by the\n  pathname in the URL, defaulting to `/`. For example, if the `url` is\n  `http://localhost/users`, a transport connection will be established to\n  `http://localhost` and a Socket.IO connection will be established to\n  `/users`.\n\n### IO#protocol\n\n  Socket.io protocol revision number this client works with.\n\n### IO#Socket\n\n  Reference to the `Socket` constructor.\n\n### IO#Manager\n\n  Reference to the `Manager` constructor.\n\n### IO#Emitter\n\n  Reference to the `Emitter` constructor.\n\n### Manager(url:String, opts:Object)\n\n  A `Manager` represents a connection to a given Socket.IO server. One or\n  more `Socket` instances are associated with the manager. The manager\n  can be accessed through the `io` property of each `Socket` instance.\n\n  The `opts` are also passed to `engine.io` upon initialization of the\n  underlying `Socket`.\n\n  - `connect`. Fired upon a succesful connection.\n  - `connect_error`. Fired upon a connection error.\n    Parameters:\n      - `Object` error object\n  - `connect_timeout`. Fired upon a connection timeout.\n  - `reconnect`. Fired upon a successful reconnection.\n    Parameters:\n      - `Number` reconnection attempt number\n  - `reconnect_error`. Fired upon a reconnection attempt error.\n    Parameters:\n      - `Object` error object\n  - `reconnect_failed`\n\n### Socket\n\n#### Events\n\n  - `connect`. Fired upon connecting.\n  - `error`. Fired upon a connection error\n    Parameters:\n      - `Object` error data\n  - `disconnect`. Fired upon a disconnection.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "socket.io-client@1.0.0",
  "description": "# socket.io-client",
  "dist": {
    "shasum": "a27a8e1ff78b67b573fc7dcbb71350caa75e75c1"
  },
  "_resolved": "git://github.com/LearnBoost/socket.io-client#80043466592156e44f378cf17e1cdcaa8627a0b7",
  "_from": "git://github.com/LearnBoost/socket.io-client",
  "_fromGithub": true
}
